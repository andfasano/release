build_root:
  image_stream_tag:
    name: release
    namespace: openshift
    tag: golang-1.13
images:
- dockerfile_path: images/Dockerfile.ci
  from: src
  to: dev-scripts
promotion:
  name: test
  namespace: openshift-kni
resources:
  '*':
    requests:
      cpu: 100m
      memory: 200Mi
tag_specification:
  name: "4.6"
  namespace: ocp
tests:
- as: e2e-metal-ipi
  steps:
    cluster_profile: packet
    workflow: baremetalds-e2e
- as: e2e-metal-ipi-dualstack
  steps:
    cluster_profile: packet
    pre:
    - ref: baremetalds-packet-setup
    - ref: ipi-install-rbac
    - ref: baremetalds-devscripts-conf-dualstack
    - ref: baremetalds-devscripts-setup
    workflow: baremetalds-e2e
- as: e2e-metal-ipi-ironic
  steps:
    env:
      LOCAL_IMAGES: |
        IRONIC_LOCAL_IMAGE=https://github.com/openshift/ironic-image
        IRONIC_DOCKERFILE=Dockerfile.ocp
        IRONIC_PR=104
    test:
    - as: build-local-ci-images
      commands: |
        readarray -t config <<< "${LOCAL_IMAGES}"
        for IMAGE_VAR in $(echo "${config[@]}" | grep "_LOCAL_IMAGE=" | grep -o "^[^=]*") ; do
            IMAGE=${!IMAGE_VAR}
            if [[ "$IMAGE" =~ "://" ]] ; then
                REPOPATH=~/${IMAGE##*/}
                # Clone to ~ if not there already
                [ -e "$REPOPATH" ] || git clone $IMAGE $REPOPATH
                cd $REPOPATH
                export $IMAGE_VAR=${IMAGE##*/}
                IMAGE_DOCKERFILE_NAME=${IMAGE_VAR/_LOCAL_IMAGE}_DOCKERFILE
                IMAGE_DOCKERFILE=${!IMAGE_DOCKERFILE_NAME:-Dockerfile}
                # If we set a specific PR number for the image, we can test it locally
                IMAGE_PR_VAR=${IMAGE_VAR/_LOCAL_IMAGE}_PR
                IMAGE_PR=${!IMAGE_PR_VAR:-}
                if [[ -n ${IMAGE_PR:-} ]]; then
                        git fetch origin pull/${IMAGE_PR}/head:pr${IMAGE_PR}
                        git checkout pr${IMAGE_PR}
                fi
                sudo podman build -t ${!IMAGE_VAR}:latest -f $IMAGE_DOCKERFILE .
                sudo podman save --output ${!IMAGE_VAR}.tar ${!IMAGE_VAR}
                gzip ${!IMAGE_VAR}.tar
                ls -ll
            fi
        done
      env:
      - default: ""
        name: LOCAL_IMAGES
      from: dev-scripts
      resources:
        requests:
          cpu: 1000m
          memory: 500Mi
zz_generated_metadata:
  branch: master
  org: openshift-metal3
  repo: dev-scripts
